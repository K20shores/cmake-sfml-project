name: Release

on:
  release:
    types: [created]
  workflow_dispatch:

jobs:
  build:
    permissions:
      contents: write
    name: ${{ matrix.platform.name }}
    runs-on: ${{ matrix.platform.os }}

    strategy:
      fail-fast: false
      matrix:
        platform:
        - { name: Windows VS2022, os: windows-2022  }
        - { name: Linux GCC,      os: ubuntu-latest }
        - { name: macOS,          os: macos-latest  }
        config:
        # - { name: Shared, flags: -DBUILD_SHARED_LIBS=TRUE }
        - { name: Static, flags: -DBUILD_SHARED_LIBS=FALSE }

    steps:
    - name: Install Linux Dependencies
      if: runner.os == 'Linux'
      run: sudo apt-get update && sudo apt-get install libxrandr-dev libxcursor-dev libudev-dev libopenal-dev libflac-dev libvorbis-dev libgl1-mesa-dev libegl1-mesa-dev

    - name: Install NSIS
      if: runner.os == 'Windows'
      run: choco install -y nsis 

    - name: Checkout
      uses: actions/checkout@v3
    
    - name: Configure
      shell: bash
      run: cmake -S . -B build -DCMAKE_INSTALL_PREFIX=install ${{matrix.platform.flags}} ${{matrix.config.flags}}

    - name: Build
      shell: bash
      run: cmake --build build --config Release --target package --parallel 4

    - name: Upload Release Asset (.zip)
      uses: softprops/action-gh-release@v2
      with:
        files: ./build/CMakeSFMLProject-*.zip
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload Release Asset (.dmg)
      if: runner.os == 'macOS'
      uses: softprops/action-gh-release@v2
      with:
        files: ./build/CMakeSFMLProject-*.dmg
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload NSIS Installer
      if: runner.os == 'Windows'
      uses: softprops/action-gh-release@v2
      with:
        files: ./build/CMakeSFMLProject-*.exe
        token: ${{ secrets.GITHUB_TOKEN }}